name: Validate and Optimize Files

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: write
  pull-requests: write

jobs:
  validate-and-optimize:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-utils mozjpeg parallel zopfli

      - name: Get Changed Files
        id: changed_files
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}:refs/remotes/origin/base
          CHANGED_FILES=$(git diff --name-only origin/base...${{ github.sha }} | tr '\n' ' ')
          echo "files=$CHANGED_FILES" >> $GITHUB_OUTPUT

      - name: Validate and Minify JSON Files
        id: json_changes
        run: |
          modified_json_files=""
          for file in ${{ steps.changed_files.outputs.files }}; do
            if [[ "$file" == *.json ]]; then
              jq empty "$file" || {
                echo "Invalid JSON: $file"
                exit 1
              }
              minified=$(jq -c . "$file")
              echo "$minified" > "$file"
              modified_json_files+="$file "
            fi
          done
          echo "modified_json_files=$modified_json_files" >> $GITHUB_OUTPUT

      - name: Validate and Minify XML Files
        id: xml_changes
        run: |
          modified_xml_files=""
          for file in ${{ steps.changed_files.outputs.files }}; do
            if [[ "$file" == *.plist ]]; then
              if ! xmllint --noout "$file"; then
                echo "Invalid XML: $file"
                exit 1
              fi
              minified=$(xmllint --noblanks "$file")
              echo "$minified" > "$file"
              modified_xml_files+="$file "
            fi
          done
          echo "modified_xml_files=$modified_xml_files" >> $GITHUB_OUTPUT

      - name: Validate and Minify Gzipped JSON Files
        id: gz_json_changes
        run: |
          modified_gz_json_files=""
          for file in ${{ steps.changed_files.outputs.files }}; do
            if [[ "$file" == *.ExportJson.gz ]]; then
              gunzip -c "$file" > temp.json
              jq empty temp.json || {
                echo "Invalid JSON: $file"
                exit 1
              }
              minified=$(jq -c . temp.json)
              echo "$minified" | zopfli --gzip > "$file"
              rm temp.json
              modified_gz_json_files+="$file "
            fi
          done
          echo "modified_gz_json_files=$modified_gz_json_files" >> $GITHUB_OUTPUT

      - name: Optimize JPEG files
        id: jpg_changes
        run: |
          modified_jpg_files=""
          jpg_files=$(echo ${{ steps.changed_files.outputs.files }} | tr ' ' '\n' | grep '\.jpg$')
          echo "$jpg_files" | parallel -j $(nproc) 'jpegtran -copy none -optimize -progressive "{}" > "{}.tmp" && mv "{}.tmp" "{}"'
          for file in $jpg_files; do
            modified_jpg_files+="$file "
          done
          echo "modified_jpg_files=$modified_jpg_files" >> $GITHUB_OUTPUT

      - name: Optimize PNG files
        id: png_changes
        run: |
          modified_png_files=""
          png_files=$(echo ${{ steps.changed_files.outputs.files }} | tr ' ' '\n' | grep '\.png$')
          echo "$png_files" | parallel -j $(nproc) 'zopflipng -y --iterations=64 --filters=01234mepb --lossy_8bit --lossy_transparent "{}" "{}"'
          for file in $png_files; do
            modified_png_files+="$file "
          done
          echo "modified_png_files=$modified_png_files" >> $GITHUB_OUTPUT

      - name: Commit changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "Sudachi"
          git config user.email "sudachi@cirno.name"

          if [ -n "${{ steps.json_changes.outputs.modified_json_files }}" ]; then
            git add ${{ steps.json_changes.outputs.modified_json_files }}
            git commit -m "Optimize JSON files"
          fi

          if [ -n "${{ steps.xml_changes.outputs.modified_xml_files }}" ]; then
            git add ${{ steps.xml_changes.outputs.modified_xml_files }}
            git commit -m "Optimize XML files"
          fi

          if [ -n "${{ steps.gz_json_changes.outputs.modified_gz_json_files }}" ]; then
            git add ${{ steps.gz_json_changes.outputs.modified_gz_json_files }}
            git commit -m "Optimize gzipped JSON files"
          fi

          if [ -n "${{ steps.jpg_changes.outputs.modified_jpg_files }}" ]; then
            git add ${{ steps.jpg_changes.outputs.modified_jpg_files }}
            git commit -m "Optimize JPEG files"
          fi

          if [ -n "${{ steps.png_changes.outputs.modified_png_files }}" ]; then
            git add ${{ steps.png_changes.outputs.modified_png_files }}
            git commit -m "Optimize PNG files"
          fi

      - name: Push changes
        if: ${{ steps.changed_files.outputs.files }}
        run: |
          git push origin HEAD:${{ github.event.pull_request.head.ref }}
